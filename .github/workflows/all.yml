name: All Build  
on:  
  push:  
    branches: [ main ]  
    # tags: ['*']  
  pull_request:  
    # branches: [ master ]  
  workflow_dispatch:  #手动触发  
  
permissions:  
  contents: write  
  
concurrency:  
  group: ${{ github.ref }}  
  cancel-in-progress: false  
  
jobs:  
  build:  
    runs-on: ${{ matrix.os }}  
    strategy:  
      matrix:  
        # os: [ubuntu-latest, windows-latest, macos-latest, macos-13]  
        os: [windows-latest]  
  
    steps:  
      - name: 查看Windows系统架构  
        if: matrix.os == 'windows-latest'  
        run: |  
          vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath  
          echo "Visual Studio installation path: ${{ steps.vscheck.outputs.installationPath }}"  
          cmake --version  
  
      - name: windows安装zip  
        if: matrix.os == 'windows-latest'  
        run: |  
          choco install zip -y  
  
      - name: 查看系统架构  
        id: arch  
        run: |  
          if [[ "$RUNNER_OS" == "Windows" ]]; then  
            echo "arch=amd64" >> $GITHUB_ENV  
          elif [[ "$RUNNER_OS" == "Linux" ]]; then  
            echo "arch=$(uname -m)" >> $GITHUB_ENV  
          elif [[ "$RUNNER_OS" == "macOS" ]]; then  
            echo "arch=$(uname -m)" >> $GITHUB_ENV  
          fi  
        shell: bash  
  
      - name: Clone aliyun-oss-cpp-sdk  
        run: |  
          git clone https://github.com/aliyun/aliyun-oss-cpp-sdk.git  


      - name: windows cmake  
        if: matrix.os == 'windows-latest'  
        run: |  
          cd aliyun-oss-cpp-sdk  
          mkdir build  
          cd build  
          cmake ..  
      - name: windows build 
        if: matrix.os == 'windows-latest'  
        run: |  
          $vsInstallPath = vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath  
          $msbuildPath = Join-Path $vsInstallPath "MSBuild\Current\Bin\MSBuild.exe"  
          cd aliyun-oss-cpp-sdk/build  
          & $msbuildPath ALL_BUILD.vcxproj  
          & $msbuildPath INSTALL.vcxproj  
      - name: windows 压缩ZIP  
        if: matrix.os == 'windows-latest'  
        run: |  
          $output_name = "GitLFS_Local_Files-${{ runner.os }}-${{ env.arch }}"  
          cd aliyun-oss-cpp-sdk/build  
          zip -r $output_name.zip .  
        shell: pwsh  

        
      - name: ls aliyun-oss-cpp-sdk/build
        run: |  
          cd aliyun-oss-cpp-sdk/build  
          ls  
  
      - name: Create Release and Upload Assets  
        uses: softprops/action-gh-release@v2  
        if: startsWith(github.ref, 'refs/tags/')  
        with:  
          files: |  
            aliyun-oss-cpp-sdk/build/GitLFS_Local_Files-*.zip  
            aliyun-oss-cpp-sdk/build/GitLFS_Local_Files-*.tar.gz  
          token: ${{ secrets.GITHUB_TOKEN }}  
