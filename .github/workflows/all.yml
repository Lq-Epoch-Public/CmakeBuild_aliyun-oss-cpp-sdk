name: All Build

on:
  push:
    branches: [ main ]
    # tags: ['*']  
  pull_request:
    # branches: [ master ]
  workflow_dispatch:  #手动触发

permissions:
  contents: write
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest,	macos-13]

    steps:
      - name: Install zip on Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install zip
          vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath  
          echo "Visual Studio installation path: ${{ steps.vscheck.outputs.installationPath }}"  
          cmake --version  

      - name: Determine architecture
        id: arch
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "arch=amd64" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "arch=$(uname -m)" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "arch=$(uname -m)" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Clone aliyun-oss-cpp-sdk  
        run: |  
          git clone https://github.com/aliyun/aliyun-oss-cpp-sdk.git 

      - name: Build
        run: |
          cd aliyun-oss-cpp-sdk
          output_name="GitLFS_Local_Files-${{ runner.os }}-${{ env.arch }}"
          case "${{ runner.os }}" in
            Windows)  
              mkdir build  
              cd build  
              cmake ..  
              $vsInstallPath = vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath  
              $msbuildPath = Join-Path $vsInstallPath "MSBuild\Current\Bin\MSBuild.exe"  
              cd aliyun-oss-cpp-sdk/build  
              & $msbuildPath ALL_BUILD.vcxproj  
              & $msbuildPath INSTALL.vcxproj 
            macOS)
              cmake -DOPENSSL_ROOT_DIR=/usr/local/Cellar/openssl/1.0.2p  \
                    -DOPENSSL_LIBRARIES=/usr/local/Cellar/openssl/1.0.2p/lib  \
                    -DOPENSSL_INCLUDE_DIRS=/usr/local/Cellar/openssl/1.0.2p/include/ ..
              makee
              ;;
            Linux)
              sudo apt-get install libcurl4-openssl-dev libssl-dev
              make
              sudo make install
              ;;
          esac
        shell: bash

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            output/GitLFS_Local_Files-*.zip
            output/GitLFS_Local_Files-*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}